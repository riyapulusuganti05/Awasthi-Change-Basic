name: CreateChangeToday
'on': workflow_dispatch
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: temurin
          cache: maven
      - name: Build with Maven
        run: mvn clean compile
  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.0.0
      - name: Run Tests with Maven
        run: mvn -B test --file pom.xml
      - name: ServiceNow DevOps Unit Test Results
        uses: ServiceNow/servicenow-devops-test-report@dev
        with:
          devops-integration-token: '${{ secrets.SN_DEVOPS_TOKEN }}'
          instance-url: '${{ secrets.SN_INSTANCE_URL }}'
          tool-id: '${{ secrets.SN_ORCHESTRATION_TOOL_ID }}'
          job-name: Test
          context-github: '${{ toJSON(github) }}'
          xml-report-filename: target/
  registerArtifact:
    name: RegisterArtifact
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: ServiceNow DevOps Register Artifact
        uses: ServiceNow/servicenow-devops-register-artifact@main
        with:
          devops-integration-token: '${{ secrets.SN_DEVOPS_TOKEN }}'
          instance-url: '${{ secrets.SN_INSTANCE_URL }}'
          tool-id: '${{ secrets.SN_ORCHESTRATION_TOOL_ID }}'
          job-name: Register Artifact
          context-github: '${{ toJSON(github) }}'
          artifacts: >-
            [ { "name": "app-devops-cicd.jar", "version": "1.${{
            github.run_number }}", "semanticVersion": "1.${{ github.run_number
            }}.0", "repositoryName": "${{ github.repository }}" } ]
  sonarScan:
    name: Sonar Scan
    needs: registerArtifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.0.0
      - name: ServiceNow DevOps Sonar Scan Results
        uses: ServiceNow/servicenow-devops-sonar@main
        with:
          instance-url: '${{ secrets.SN_INSTANCE_URL }}'
          devops-integration-token: '${{ secrets.SN_DEVOPS_TOKEN }}'
          tool-id: '${{ secrets.SN_ORCHESTRATION_TOOL_ID }}'
          context-github: '${{ toJSON(github) }}'
          job-name: Sonar Scan
          sonar-host-url: '${{ secrets.SONAR_URL }}'
          sonar-project-key: '${{ secrets.SONAR_PROJECT_KEY }}'
    # sonarScan:
    #   name: Sonar Scan
    #   needs: sonarScan
    #   runs-on: ubuntu-latest
    #   steps:
    #     - name: Checkout
    #       uses: actions/checkout@v4.0.0
    #     - name: ServiceNow DevOps Sonar Scan Results
    #       uses: ServiceNow/servicenow-devops-sonar@dev
    #       with:
    #         instance-url: '${{ secrets.SN_INSTANCE_URL }}'
    #         devops-integration-token: '${{ secrets.SN_DEVOPS_TOKEN }}'
    #         tool-id: '${{ secrets.SN_ORCHESTRATION_TOOL_ID }}'
    #         context-github: '${{ toJSON(github) }}'
    #         job-name: Sonar Scan
    #         sonar-host-url: '${{ secrets.SONAR_URL }}'
    #         sonar-project-key: '${{ secrets.SONAR_PROJECT_KEY }}'
    #   sonarScan:
    #     name: Sonar Scan
    #     needs: sonarScan
    #     runs-on: ubuntu-latest
    #     steps:
    #       - name: Checkout
    #         uses: actions/checkout@v4.0.0
    #       - name: ServiceNow DevOps Sonar Scan Results
    #         uses: ServiceNow/servicenow-devops-sonar@dev
    #         with:
    #         instance-url: '${{ secrets.SN_INSTANCE_URL }}'
    #         devops-integration-token: '${{ secrets.SN_DEVOPS_TOKEN }}'
    #         tool-id: '${{ secrets.SN_ORCHESTRATION_TOOL_ID }}'
    #         context-github: '${{ toJSON(github) }}'
    #         job-name: Sonar Scan
    #         sonar-host-url: '${{ secrets.SONAR_URL }}'
    #         sonar-project-key: '${{ secrets.SONAR_PROJECT_KEY }}'     
  ServiceNowSecurityScanResults:
    runs-on: ubuntu-latest
    name: ServiceNow Security Scan Results
    needs: sonarScan
    steps:
      - name: ServiceNow DevOps Security Results
        uses: ServiceNow/servicenow-devops-security-result@main
        with:
          devops-integration-token: '${{ secrets.SN_DEVOPS_TOKEN }}'
          instance-url: '${{ secrets.SN_INSTANCE_URL }}'
          tool-id: '${{ secrets.SN_ORCHESTRATION_TOOL_ID }}'
          context-github: '${{ toJSON(github) }}'
          job-name: ServiceNow Security Scan Results
          security-result-attributes: '{"scanner": "Veracode", "applicationName": "10kflaws-72"}'
          scanner: Scanning tool and is required e.g. Veracode.
          applicationName: >-
            Name of your Veracode application and is required. This attribute is
            applicable only for Veracode.
          buildVersion: >-
            Veracode Scan name /build version and is optional. This attribute is
            applicable only for Veracode.
          securityToolId: >-
            Security tool onboarded in ServiceNow (sys_id of the onboarded
            security tool) and is optional.
  registerPackage:
    name: Register Package
    needs: ServiceNowSecurityScanResults
    runs-on: ubuntu-latest
    steps:
      - name: ServiceNow DevOps Register Package
        uses: ServiceNow/servicenow-devops-register-package@main
        with:
          devops-integration-token: '${{ secrets.SN_DEVOPS_TOKEN }}'
          instance-url: '${{ secrets.SN_INSTANCE_URL }}'
          tool-id: '${{ secrets.SN_ORCHESTRATION_TOOL_ID }}'
          context-github: '${{ toJSON(github) }}'
          artifacts: >-
            [ { "name": "app-devops-cicd.jar", "version": "1.${{
            github.run_number }}", "semanticVersion": "1.${{ github.run_number
            }}.0", "repositoryName": "${{ github.repository }}" } ]
          package-name: app-devops-change-velocity-cicd.war
          job-name: Register Package
  change:
    name: Change Request
    needs: registerPackage
    runs-on: ubuntu-latest
    steps:
      - name: ServiceNow DevOps Change Attributes
        uses: ServiceNow/servicenow-devops-change@main
        with:
          devops-integration-token: '${{ secrets.SN_DEVOPS_TOKEN }}'
          instance-url: '${{ secrets.SN_INSTANCE_URL }}'
          tool-id: '${{ secrets.SN_ORCHESTRATION_TOOL_ID }}'
          context-github: '${{ toJSON(github) }}'
          job-name: Change Request
          change-request: >-
            {"setCloseCode":"true","attributes":{"short_description":"Automated
            Software
            Deployment","chg_model":"007c4001c343101035ae3f52c1d3aeb2","description":"Automated
            Software
            Deployment.","assignment_group":"a715cd759f2002002920bde8132e7018","implementation_plan":"Software
            update is tested and results can be found in Test Summaries Tab;
            When the change is approved the implementation happens automated by
            the CICD pipeline within the change planned start and end time
            window.","backout_plan":"When software fails in production, the
            previous software release will be re-deployed.","test_plan":"Testing
            if the software was successfully deployed"}}
          interval: '100'
          changeCreationTimeOut: '1000'
  getchange:
    needs: change
    runs-on: ubuntu-latest
    name: ServiceNow DevOps Get Change
    outputs:
      change-request-number: '${{ steps.get_change.outputs.change-request-number }}'
    steps:
      - name: ServiceNow DevOps Get Change
        uses: ServiceNow/servicenow-devops-get-change@main
        id: get_change
        with:
          instance-url: '${{ secrets.SN_INSTANCE_URL }}'
          devops-integration-token: '${{ secrets.SN_DEVOPS_TOKEN }}'
          tool-id: '${{ secrets.SN_ORCHESTRATION_TOOL_ID }}'
          context-github: '${{ toJSON(github) }}'
          change-details: '{"build_number":"","pipeline_name":"","stage_name":"Deploy"}'
  updatechange:
    needs: getchange
    runs-on: ubuntu-latest
    name: ServiceNow DevOps Update Change
    steps:
      - name: ServiceNow DevOps Update Change
        uses: ServiceNow/servicenow-devops-update-change@dev
        id: update_change
        with:
          instance-url: '${{ secrets.SN_INSTANCE_URL }}'
          devops-integration-token: '${{ secrets.SN_DEVOPS_TOKEN }}'
          tool-id: '${{ secrets.SN_ORCHESTRATION_TOOL_ID }}'
          context-github: '${{ toJSON(github) }}'
          change-request-number: '${{needs.getchange.outputs.change-request-number}}'
          change-request-details: >-
            {"state":"3","close_code":"successful_issues","close_notes":"Test
            results successful"}
